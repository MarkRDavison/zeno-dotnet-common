@namespace mark.davison.common.client.web.Components

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.subtitle1">@Subtitle</MudText>
        <MudText Typo="Typo.body1">@Body</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Secondary">@SecondaryText</MudButton>
        <MudButton Disabled="@_primaryDisabled" Color="Color" OnClick="Primary">
            @if (_inProgress)
            {
                <MudProgressCircular Size="Size.Small" Color="Color" Indeterminate="true" />
            }
            else
            {
                @PrimaryText
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {


    private bool _inProgress;
    public bool _primaryDisabled => _inProgress;

    [CascadingParameter, EditorRequired]
    public required IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string PrimaryText { get; set; } = "Ok";

    [Parameter]
    public string SecondaryText { get; set; } = "Cancel";

    [Parameter]
    public string Subtitle { get; set; } = string.Empty;

    [Parameter]
    public string Body { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public required Color Color { get; set; }

    [Parameter, EditorRequired]
    public required Func<Task<Response>> PrimaryCallback { get; set; }

    private async Task Primary()
    {
        _inProgress = true;

        var response = await PrimaryCallback();

        if (response.Success)
        {
            MudDialog.Close(DialogResult.Ok(response));
        }
        else
        {
            Console.Error.WriteLine("TODO: How to handle errors in ConfirmationDialog.Primary, add to message bar/toast???");
            response.Errors.ForEach(Console.Error.WriteLine);
            response.Warnings.ForEach(Console.WriteLine);
        }

        _inProgress = false;
    }

    private void Secondary() => MudDialog.Cancel();
}