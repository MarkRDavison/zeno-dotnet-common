variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - package

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - cd src/mark.davison.common
    - dotnet restore
    - dotnet build
    - dotnet test --test-adapter-path:. --collect:"XPlat Code Coverage" --results-directory:"artifacts" --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    reports:
      cobertura:
       - ./**/coverage.cobertura.xml
      junit: 
       - ./**/*test-result.xml
       
package:
  stage: package
  image: mcr.microsoft.com/dotnet/sdk:6.0
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  retry: 2
  script:
    - echo $CI_COMMIT_TAG
    - apt-get update -y && apt-get install python3 -y
    - python3 --version
    - python3 ./cicd/Nuget/writeProjectVersion.py --projectDir ./src/mark.davison.common --version $CI_COMMIT_TAG
    - cd src/mark.davison.common
    - dotnet nuget add source "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet pack -c Release -o "$PWD/nuget" --include-symbols
    - dotnet nuget push "$PWD/nuget/**/*.nupkg" --source gitlab
    - git --version
    - git remote set-url origin https://${GIT_CI_USERNAME}:${GIT_CI_PASSWORD}@gitlab.markdavison.kiwi/mark.davison/${CI_PROJECT_NAME}.git
    - git config --global user.email 'ci@gitlab.markdavison.kiwi'
    - git config --global user.name 'ci'
    - git add -A
    - git status
    - git commit -m "Set project version to $CI_COMMIT_TAG [ci skip]"
    - git push origin HEAD:main -o ci.skip
  needs: [ "build" ]